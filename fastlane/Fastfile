#!/usr/bin/env ruby
# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.32.1"

before_all do
  # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
end

after_all do |lane|
  notification(
    title: "Fastlane '#{lane}'",
    message: "finished successfully 🎉🎉"
  )
end

error do |lane, exception|
  notification(
    title: "Fastlane '#{lane}'",
    message: "Failed: #{exception.message}"
  )
  UI.error "exception: #{exception.message}"
end

desc "Will Check and show all fastlane projects dependencies (for both Android and iOS), also downloads/updates them for you"
lane :dependencies do
  lg_dependencies(
    lg_just_info: false
  )
end

desc "Will update project strings reading from the provided Google spreadsheet"
private_lane :update_strings do
  lg_strings(
    repository_path: "./",
    mark_unused_strings: false
  )
end

platform :ios do

  desc "Sets a new tag to the current Repository, update podspec and push everything. You can use allow_warnings:true as parameter"
  private_lane :lib_tag do |options|

    version = version_get_podspec(path: ENV["PODSPEC_FILE"])

    check_git_branch( branch: "develop")

    ensure_git_up_to_date

    UI.message ("➡️  Current Podspec version: #{version}").blue

    rb_info_collector(
      ask_for_version_number: true,
    )

    version_bump_podspec(
      path: ENV["PODSPEC_FILE"],
      version_number: Actions.lane_context[Actions::SharedValues::RB_INFO_VERSION_NUMBER]
    )

    version_number = Actions.lane_context[Actions::SharedValues::RB_INFO_VERSION_NUMBER]
    if Gem::Version.new(version) > Gem::Version.new(version_number)
      raise "Current version is bigger than the one you provided. Check it and restart the process :)"
    end

    git_commit(
      path: "./#{ENV["PODSPEC_FILE"]}",
      message: "Podspec version Bump to " + Actions.lane_context[Actions::SharedValues::RB_INFO_VERSION_NUMBER]
    )

    add_git_tag(
      tag: Actions.lane_context[Actions::SharedValues::RB_INFO_VERSION_NUMBER],
    )

    push_to_git_remote(
      local_branch: git_branch,
    )

    pod_push(
      path: ENV["PODSPEC_FILE"],
      repo: 'metropolis',
      allow_warnings: options[:allow_warnings] ? true : false
    )

    version_number = Actions.lane_context[Actions::SharedValues::RB_INFO_VERSION_NUMBER]

    slack(
      message: "New tag in #{ENV["PODSPEC_FILE"]} iOS `#{version_number}` @channel :tada:",
      success: true,
      channel: "#mobile",  # Optional, by default will post to the default channel configured for the POST URL.
    )
  end

  desc "C.I. Lane, it runs 'test' lane from a PR and publishes on github the result"
  private_lane :ci_run do
    
    pullRequest = ""
    if !is_ci 
      pullRequest = ask("Pull request number = ".yellow)
      github_status_start(
        gh_pull_request: pullRequest
      )
    end

    testException = nil
    begin
      test 
    rescue => ex
      testException = ex
    end

    if !is_ci 
      github_status_finish(
        gh_pull_request: pullRequest,
        scan_results_junit: "./scanresults/report.junit"
      )
    end
    if testException
      raise testException
    end
  end
end
